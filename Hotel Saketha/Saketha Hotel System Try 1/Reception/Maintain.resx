<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CircleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="closebtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAfNJREFUSEvl
        lV1L3EAUhvcvaBFqsd55LaKZWPRCM1k/WrAgUq8E8UpQQfR3iOhd6UX/giKCoIK/QCqC3mj9BD+wUDeT
        rCau4znjwbizQ9wICuILL4ecPe9zIJlkM+9HQYf12XPZmOda84KzdY+zXVXh2uP2SNBm19BoevnZlk8A
        /AXACCwTHHrc+ul3NlZTtDyJrMUh/E+DPeULz2EOIZKVa29qgcCVBijX+cC1mwllFt4iGDzTgml9Itqs
        j4QsleD2b0MotfFZErJYebexFgZKHrL/nctodUn6P74W9/u/3fd7nKI+OTSeOsGtScOwjNZWJKpwdKDA
        2MNaOD5U/WhtuSSj7NjjhI4lXLZoGvb7umRh/68C3p6dyGBiWFUU9vF3Uw68QOhYwmGbhkFltWhvV4Hl
        zY0qeJ2wAL1B6FjQPNaGipwfHYJ7E6kFWIORQePcIx8ROhY0/2hDDw4GeuXt+en9gvBaFbzGvmmevE7o
        WNBc0IaUHy8o7O3IYKhfVVTSIjjGc4SOhR870/BzT5fvsGFCx3qV9wQFb/yMIfAcTxGyVF53QxUMHGqB
        tN7PcfaBkGb5blODz5lnCJfjnGhn9YRK1mXWroPPwrYBkuQtzBGiPF12fqmEEzIL4VCD6Q6Fa03/b22t
        oGh6veh//BtTJnMHMBGh8z2UUM8AAAAASUVORK5CYII=
</value>
  </data>
</root>